from os import environ as env #Import a library called OS from which we import environ so we do not need to hardcode values (such as the API key)
import requests #Here we import the requests library which we use for the GET request (HTTP)

class Cryptocurrency: #Here we create a new class called Cryptocurrency

    def get_data(self): # Here we define a method called get_data with one parameter (self), see line 30 for an example
        url = 'https://rest.coinapi.io/v1/ohlcv/BTC/USD/history?period_id=1DAY&time_start=2021-05-01T00:00:00' #Create a variable of string-type (the link we need to access)
        headers = {"X-CoinAPI-Key": env.get("COIN_API_KEY")} #We create a new variable of the dictionary type, with the key, see example on line 33. 
        response = requests.get(url, headers=headers) #We define a variable called response (class) which stores the response of the API provider after sending a GET request to the URL defined above
        if ("error" in response.json()): # Safeguard in case we run out of request or get an error back we return hardcoded data (not up to date) in case the API messes up, to ensure that we have data to work with anyway (we're using a free plan for the API with 100 requests per 24 hours)
            return [['Date', 'Price'], ['05-01', 57859.28], ['05-02', 56625.2], ['05-03', 57212.73], ['05-04', 53241.92], ['05-05', 57508.18], ['05-06', 56440.66], ['05-07', 57380.39], ['05-08', 58958.05], ['05-09', 58317.0], ['05-10', 55866.41], ['05-11', 56753.19], ['05-12', 49451.0], ['05-13', 49690.11], ['05-14', 49893.48], ['05-15', 46775.51], ['05-16', 46450.79], ['05-17', 43580.5], ['05-18', 42877.75], ['05-19', 36742.3], ['05-20', 40623.33], ['05-21', 37335.16], ['05-22', 37476.83], ['05-23', 34718.8], ['05-24', 38878.56], ['05-25', 38361.81], ['05-26', 39293.23], ['05-27', 38579.0], ['05-28', 36870.87], ['05-29', 34627.82], ['05-30', 35669.44], ['05-31', 35919.16]]
        return self.parse_data(response) # Self because the parse_data method is defined under the class (line 15), we give it an argument called response which is whatever we got back from the request (line 9 )

    def parse_data(self, response):# Here we define a method called parse_data with a parameter response. (that we got on line 9.)
        output = [["Date", "Price"]] #We only define the first part of the list of lists (see line 12) and use the for loop to parse the rest.
        for day in response.json(): # For every single item (day (see line 48 for an example)) in the response (line 9) it will iterate over every item and transform the data into JSON friendly formating/datatype
            output.append([day['time_period_start'][5:10], day['price_close']]) # output is the variable defined on line 16. By appending it is added item for item after Date and Price, we only take part of the data (see line 58), but only want the month and day so take part of the start price + the close-price and ignore the rest. The 5:10 just means we take from the day string period the 5th to the 10th character (2020-05-01) so we get 05-01
        return output # Return everything (list of lists) when the for loop is done to wherever the method has been called from (which is get_data)

    @staticmethod # We could have used for all of methods or none of them, its only reason is that there is no need to create an instnce of the class (line 30-31)
    def present_value(coin): #Define a method called present_value which takes a parameter (coin (string))
        url = f'https://rest.coinapi.io/v1/exchangerate/{coin}/EUR' # We define a string (f string because of variables), which is a way of calling multiple URLs by passing the coin name as argument, see line 65 for example of calling it
        headers = {"X-CoinAPI-Key": env.get("COIN_API_KEY")} # We use the same header as before to confirm ownership (saved in the local environment)
        response = requests.get(url, headers=headers) # We use the same GET request as before with a different URL
        if ("error" in response.json()): # Similar failsafe with hardcoded/magical number float if the GET request fails
            return float(22000*7.4) # Magic Float with 7.4 as conversion rate as API provider does not give DKK
        return float(response.json()["rate"]) * 7.4 #If the response doesn't fail we return the current value (EUR) times 7.4 to get DKK
        

example = Cryptocurrency().get_data() # We are creating an instance of cryptocurrency
example_staticmethod = Cryptocurrency.present_value("BTC") # We dont need an isntance of the class.
# self variable would refer to example.

# env.get("COIN_API_KEY") == 0C261169-D7AA-4B12-A252-78D3C7F3B83D



 # ages = { "Tom": 21, "Niels": 23, "Benjamin":46 }

 # {"X-CoinAPI-Key": "0C261169-D7AA-4B12-A252-78D3C7F3B83D"}
 # https://www.coinapi.io/ -> Get free api key
 # headers = {"X-CoinAPI-Key": "0C261169-D7AA-4B12-A252-78D3C7F3B83D"} would be the hardcoded version, Toms has defined the key manually in his environment and for running a new instance we'd have to do the same. 
 # There's a good reason to keep the API key hidden and not hardcoded as it's usually confidential and means we'd pay money. 


# <class 'requests.models.Response'>

#items = ["apple", "banana", "orange"]

#for fruit in items:
  #  print(fruit)

#import requests
#r = requests.get('https://github.com/timeline.json')
#r.json()
# What happens on line 55: [{u'repository': {u'open_issues': 0, u'url': 'https://github.com/...

# day['time_period_start'] == '2021-05-01T00:00:00.0000000Z'
# day['time_period_start'][5:10] == '05-01'
[{'time_period_start': '2021-05-01T00:00:00.0000000Z', 'time_period_end': '2021-05-02T00:00:00.0000000Z', 'time_open': '2021-05-01T00:00:00.0635370Z', 'time_close': '2021-05-01T23:59:59.7911080Z', 'price_open': 57798.77, 'price_high': 58562.5, 'price_low': 57049.63, 'price_close': 57859.28, 'volume_traded': 19884.542686868, 'trades_count': 478569}, {'time_period_start': '2021-05-02T00:00:00.0000000Z', 'time_period_end': '2021-05-03T00:00:00.0000000Z', 'time_open': '2021-05-02T00:00:01.0290030Z', 'time_close': '2021-05-02T23:59:59.8103600Z', 'price_open': 57859.28, 'price_high': 57998.44, 'price_low': 56064.51, 'price_close': 56625.2, 'volume_traded': 15652.431385739, 'trades_count': 362707}, {'time_period_start': '2021-05-03T00:00:00.0000000Z', 'time_period_end': '2021-05-04T00:00:00.0000000Z', 'time_open': '2021-05-03T00:00:00.0489320Z', 'time_close': '2021-05-03T23:59:59.9720150Z', 'price_open': 56625.21, 'price_high': 59004.0, 'price_low': 56500.0, 'price_close': 57212.73, 'volume_traded': 31359.301130706, 'trades_count': 545903}, {'time_period_start': '2021-05-04T00:00:00.0000000Z', 'time_period_end': '2021-05-05T00:00:00.0000000Z', 'time_open': '2021-05-04T00:00:00.1000000Z', 'time_close': '2021-05-04T23:59:59.6804950Z', 'price_open': 57193.4, 'price_high': 57268.0, 'price_low': 53057.7, 'price_close': 53241.92, 'volume_traded': 51515.616254495, 'trades_count': 806594}, {'time_period_start': '2021-05-05T00:00:00.0000000Z', 'time_period_end': '2021-05-06T00:00:00.0000000Z', 'time_open': '2021-05-05T00:00:00.0471740Z', 'time_close': '2021-05-05T23:59:50.5945100Z', 'price_open': 53241.91, 'price_high': 
57999.8, 'price_low': 52913.02, 'price_close': 57508.18, 'volume_traded': 46496.832960083, 'trades_count': 742739}, {'time_period_start': '2021-05-06T00:00:00.0000000Z', 'time_period_end': '2021-05-07T00:00:00.0000000Z', 'time_open': '2021-05-06T00:00:08.3115980Z', 'time_close': '2021-05-06T23:59:59.8477480Z', 'price_open': 57515.7, 'price_high': 58465.93, 'price_low': 55267.0, 'price_close': 56440.66, 'volume_traded': 35022.641595364, 'trades_count': 648962}, {'time_period_start': '2021-05-07T00:00:00.0000000Z', 'time_period_end': '2021-05-08T00:00:00.0000000Z', 'time_open': '2021-05-07T00:00:00.3834980Z', 'time_close': '2021-05-07T23:59:58.0762080Z', 'price_open': 56444.82, 'price_high': 58750.0, 'price_low': 55288.11, 'price_close': 57380.39, 'volume_traded': 38286.897440523, 'trades_count': 654131}, {'time_period_start': '2021-05-08T00:00:00.0000000Z', 'time_period_end': '2021-05-09T00:00:00.0000000Z', 'time_open': '2021-05-08T00:00:00.1270440Z', 'time_close': '2021-05-08T23:59:59.7630980Z', 'price_open': 57380.39, 'price_high': 59583.5, 'price_low': 56977.5, 'price_close': 58958.05, 'volume_traded': 31154.421903139, 'trades_count': 585916}, {'time_period_start': '2021-05-09T00:00:00.0000000Z', 'time_period_end': '2021-05-10T00:00:00.0000000Z', 'time_open': '2021-05-09T00:00:00.0100000Z', 'time_close': '2021-05-09T23:59:59.9350000Z', 
'price_open': 58951.5, 'price_high': 59318.35, 'price_low': 56251.5, 'price_close': 58317.0, 'volume_traded': 35032.717799635, 'trades_count': 618889}, {'time_period_start': '2021-05-10T00:00:00.0000000Z', 'time_period_end': '2021-05-11T00:00:00.0000000Z', 'time_open': '2021-05-10T00:00:00.1152670Z', 'time_close': '2021-05-10T23:59:59.8277180Z', 'price_open': 58313.84, 'price_high': 59619.0, 'price_low': 53434.31, 'price_close': 55866.41, 'volume_traded': 51260.837302156, 'trades_count': 825334}, {'time_period_start': '2021-05-11T00:00:00.0000000Z', 'time_period_end': '2021-05-12T00:00:00.0000000Z', 'time_open': '2021-05-11T00:00:00.1564280Z', 'time_close': '2021-05-11T23:59:59.9975500Z', 'price_open': 55866.38, 'price_high': 56972.33, 'price_low': 54490.0, 'price_close': 56753.19, 'volume_traded': 31693.125167648, 'trades_count': 608718}, {'time_period_start': '2021-05-12T00:00:00.0000000Z', 'time_period_end': '2021-05-13T00:00:00.0000000Z', 'time_open': '2021-05-12T00:00:00.1082590Z', 'time_close': '2021-05-12T23:59:59.9930000Z', 'price_open': 56753.19, 'price_high': 58054.0, 'price_low': 48350.0, 'price_close': 49451.0, 'volume_traded': 58261.830861793, 'trades_count': 891428}, {'time_period_start': '2021-05-13T00:00:00.0000000Z', 'time_period_end': '2021-05-14T00:00:00.0000000Z', 'time_open': '2021-05-13T00:00:00.1390000Z', 'time_close': '2021-05-13T23:59:59.9323510Z', 'price_open': 49502.7, 'price_high': 52500.0, 'price_low': 45000.0, 'price_close': 49690.11, 'volume_traded': 87178.543728204, 'trades_count': 1215214}, {'time_period_start': '2021-05-14T00:00:00.0000000Z', 'time_period_end': '2021-05-15T00:00:00.0000000Z', 'time_open': '2021-05-14T00:00:00.0840000Z', 'time_close': '2021-05-14T23:59:59.9814360Z', 'price_open': 49711.64, 'price_high': 51609.0, 'price_low': 48875.69, 'price_close': 49893.48, 'volume_traded': 38710.724244863, 'trades_count': 709978}, {'time_period_start': '2021-05-15T00:00:00.0000000Z', 'time_period_end': '2021-05-16T00:00:00.0000000Z', 'time_open': '2021-05-15T00:00:00.1464520Z', 'time_close': '2021-05-15T23:59:59.9450870Z', 'price_open': 49893.48, 'price_high': 50827.3, 'price_low': 46448.53, 'price_close': 46775.51, 'volume_traded': 39251.914781848, 'trades_count': 795351}, {'time_period_start': '2021-05-16T00:00:00.0000000Z', 'time_period_end': '2021-05-17T00:00:00.0000000Z', 'time_open': '2021-05-16T00:00:00.0789060Z', 'time_close': '2021-05-16T23:59:59.9759790Z', 'price_open': 46771.01, 'price_high': 49828.8, 'price_low': 43700.0, 'price_close': 46450.79, 'volume_traded': 54086.259491064, 'trades_count': 865208}, {'time_period_start': '2021-05-17T00:00:00.0000000Z', 'time_period_end': '2021-05-18T00:00:00.0000000Z', 'time_open': '2021-05-17T00:00:00.0009920Z', 'time_close': '2021-05-17T23:59:59.9062310Z', 'price_open': 46450.78, 'price_high': 46648.5, 'price_low': 42080.0, 'price_close': 43580.5, 'volume_traded': 91118.868485198, 'trades_count': 1161165}, {'time_period_start': '2021-05-18T00:00:00.0000000Z', 'time_period_end': '2021-05-19T00:00:00.0000000Z', 'time_open': '2021-05-18T00:00:00.0084050Z', 'time_close': '2021-05-18T23:59:59.4900000Z', 'price_open': 43571.89, 'price_high': 45872.05, 'price_low': 42023.69, 'price_close': 42877.75, 'volume_traded': 56454.645434085, 'trades_count': 794135}, {'time_period_start': '2021-05-19T00:00:00.0000000Z', 'time_period_end': '2021-05-20T00:00:00.0000000Z', 'time_open': '2021-05-19T00:00:00.0368470Z', 'time_close': '2021-05-19T23:59:59.9990000Z', 'price_open': 42865.05, 'price_high': 43616.5, 'price_low': 28322.5, 'price_close': 36742.3, 'volume_traded': 209925.70347333, 'trades_count': 2086324}, {'time_period_start': '2021-05-20T00:00:00.0000000Z', 'time_period_end': '2021-05-21T00:00:00.0000000Z', 'time_open': '2021-05-20T00:00:00.0802500Z', 'time_close': '2021-05-20T23:59:59.7948440Z', 'price_open': 36735.44, 'price_high': 43000.0, 'price_low': 34924.5, 'price_close': 40623.33, 'volume_traded': 110687.577793738, 'trades_count': 1324565}, {'time_period_start': '2021-05-21T00:00:00.0000000Z', 'time_period_end': '2021-05-22T00:00:00.0000000Z', 'time_open': '2021-05-21T00:00:00.1763760Z', 'time_close': '2021-05-21T23:59:59.6170000Z', 'price_open': 40623.24, 'price_high': 42327.0, 'price_low': 33476.5, 'price_close': 37335.16, 'volume_traded': 105089.080052043, 'trades_count': 1148306}, {'time_period_start': '2021-05-22T00:00:00.0000000Z', 'time_period_end': '2021-05-23T00:00:00.0000000Z', 'time_open': '2021-05-22T00:00:01.6945610Z', 'time_close': '2021-05-22T23:59:59.7686700Z', 'price_open': 37333.09, 'price_high': 38889.76, 'price_low': 35247.0, 'price_close': 37476.83, 'volume_traded': 54426.271199759, 'trades_count': 741784}, {'time_period_start': '2021-05-23T00:00:00.0000000Z', 'time_period_end': '2021-05-24T00:00:00.0000000Z', 'time_open': '2021-05-23T00:00:01.0275480Z', 'time_close': '2021-05-23T23:59:59.9510000Z', 'price_open': 37476.84, 'price_high': 38319.36, 'price_low': 31078.7, 'price_close': 34718.8, 'volume_traded': 98735.985050036, 'trades_count': 1178383}, {'time_period_start': '2021-05-24T00:00:00.0000000Z', 'time_period_end': '2021-05-25T00:00:00.0000000Z', 'time_open': '2021-05-24T00:00:00.0255910Z', 'time_close': '2021-05-24T23:59:59.4974460Z', 'price_open': 34758.88, 'price_high': 39989.9, 'price_low': 34407.17, 'price_close': 38878.56, 'volume_traded': 82469.468099377, 'trades_count': 934089}, {'time_period_start': '2021-05-25T00:00:00.0000000Z', 'time_period_end': '2021-05-26T00:00:00.0000000Z', 'time_open': '2021-05-25T00:00:00.1834790Z', 'time_close': '2021-05-25T23:59:59.8700060Z', 'price_open': 38874.53, 'price_high': 40000.0, 'price_low': 36481.26, 'price_close': 38361.81, 'volume_traded': 55151.615235785, 'trades_count': 712963}, {'time_period_start': '2021-05-26T00:00:00.0000000Z', 'time_period_end': '2021-05-27T00:00:00.0000000Z', 'time_open': '2021-05-26T00:00:00.0800470Z', 'time_close': '2021-05-26T23:59:59.9998680Z', 'price_open': 38361.81, 'price_high': 40934.5, 'price_low': 37828.7, 'price_close': 39293.23, 'volume_traded': 52632.364811351, 'trades_count': 664342}, {'time_period_start': '2021-05-27T00:00:00.0000000Z', 'time_period_end': '2021-05-28T00:00:00.0000000Z', 'time_open': '2021-05-27T00:00:00.1009850Z', 'time_close': '2021-05-27T23:59:59.8700000Z', 'price_open': 39293.23, 'price_high': 40440.95, 'price_low': 37117.09, 'price_close': 38579.0, 'volume_traded': 40576.798053948, 'trades_count': 522287}, {'time_period_start': '2021-05-28T00:00:00.0000000Z', 'time_period_end': '2021-05-29T00:00:00.0000000Z', 'time_open': '2021-05-28T00:00:00.0081720Z', 'time_close': '2021-05-28T23:59:59.9004430Z', 'price_open': 38556.88, 'price_high': 38905.12, 'price_low': 34688.0, 'price_close': 35680.47, 'volume_traded': 63673.003081918, 'trades_count': 713321}, {'time_period_start': '2021-05-29T00:00:00.0000000Z', 'time_period_end': '2021-05-30T00:00:00.0000000Z', 'time_open': '2021-05-29T00:00:00.4156050Z', 'time_close': '2021-05-29T23:59:59.9462250Z', 'price_open': 35680.48, 'price_high': 37349.0, 'price_low': 33639.0, 'price_close': 34627.82, 'volume_traded': 43503.788463635, 'trades_count': 590371}, {'time_period_start': '2021-05-30T00:00:00.0000000Z', 'time_period_end': '2021-05-31T00:00:00.0000000Z', 'time_open': '2021-05-30T00:00:00.0857810Z', 'time_close': '2021-05-30T23:59:59.5588250Z', 'price_open': 34627.81, 'price_high': 36521.0, 'price_low': 33333.0, 'price_close': 35669.44, 'volume_traded': 25807.022115957, 'trades_count': 381462}, {'time_period_start': '2021-05-31T00:00:00.0000000Z', 'time_period_end': '2021-06-01T00:00:00.0000000Z', 'time_open': '2021-05-31T00:00:00.0887240Z', 'time_close': '2021-05-31T23:59:59.5611430Z', 'price_open': 35669.44, 'price_high': 37540.96, 'price_low': 34183.0, 'price_close': 37279.31, 'volume_traded': 36119.180917877, 'trades_count': 404241}, {'time_period_start': '2021-06-01T00:00:00.0000000Z', 'time_period_end': '2021-06-02T00:00:00.0000000Z', 'time_open': '2021-06-01T00:00:00.0072210Z', 'time_close': '2021-06-01T23:59:58.0168690Z', 'price_open': 37276.23, 'price_high': 37934.3, 'price_low': 35660.031, 'price_close': 36685.0, 'volume_traded': 34085.665008723, 'trades_count': 492610}, {'time_period_start': '2021-06-02T00:00:00.0000000Z', 'time_period_end': '2021-06-03T00:00:00.0000000Z', 'time_open': '2021-06-02T00:00:00.8850140Z', 'time_close': '2021-06-02T23:59:59.9761740Z', 'price_open': 36684.99, 'price_high': 38256.4, 'price_low': 35920.0, 'price_close': 37577.91, 'volume_traded': 32471.491079511, 'trades_count': 445555}, {'time_period_start': '2021-06-03T00:00:00.0000000Z', 'time_period_end': '2021-06-04T00:00:00.0000000Z', 'time_open': '2021-06-03T00:00:00.1945130Z', 'time_close': '2021-06-03T23:59:59.5593840Z', 'price_open': 37581.83, 'price_high': 39490.0, 'price_low': 37154.13, 'price_close': 39248.55, 'volume_traded': 30951.430110112, 'trades_count': 410306}, {'time_period_start': '2021-06-04T00:00:00.0000000Z', 'time_period_end': '2021-06-05T00:00:00.0000000Z', 'time_open': '2021-06-04T00:00:00.0924340Z', 'time_close': '2021-06-04T23:59:59.7748120Z', 'price_open': 39248.54, 'price_high': 39291.24, 'price_low': 35576.67, 'price_close': 36856.52, 'volume_traded': 37762.641416675, 'trades_count': 514910}, {'time_period_start': '2021-06-05T00:00:00.0000000Z', 'time_period_end': '2021-06-06T00:00:00.0000000Z', 'time_open': '2021-06-05T00:00:00.0931030Z', 'time_close': '2021-06-05T11:49:56.4265240Z', 'price_open': 36856.53, 'price_high': 37935.8, 'price_low': 35674.0, 'price_close': 35826.36, 'volume_traded': 11516.071593392, 'trades_count': 165193}]


Cryptocurrency.present_value("BTC")